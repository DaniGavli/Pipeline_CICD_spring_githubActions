#nome do fluxo
name: CI/CD Pipeline
on:
  workflow_dispatch: null
#o fluxo e disparado a cada commit da branch main
  push:
    branches:
      - main
#abaixo o job de teste da aplicacao, roda no ubuntu ultima versao
jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: Cache Maven packages
#abaixo armazena as dependencias em cache para melhorar as execucao do fluxo de trabalho
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Tests
        run: mvn -B test
          #Configuracoes do sonar
  sonar:
    #A execucao depende do job de teste acima
    needs: tests
    name: SonarCloud analysis
    #roda com ubuntu na ultima versao
    runs-on: ubuntu-latest
    #passo a passo do job
    steps:
      #verifica o repositorio em $GITHUB_WORKSPACE, para o fluxo poder acessar
      - uses: actions/checkout@v1
      #JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      # SonarCloud cache para permitir as e builds rodem com mais agilidade
      - name: Cache SonarCloud packages
        #
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      #Maven cache para permitir as e builds rodem com mais agilidade
      - name: Cache Maven packages
        #
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Ao projeto é analizado com SonarCloud
      - name: Analyze with SonarCloud
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=DaniGavli_Pipeline_CICD_spring_githubActions -Dsonar.organization=danigavli -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          #Build job
  build:
    #Ddepende do job do sonar acima
    needs: sonar
    name: Build
    #Roda com ubuntu
    runs-on: ubuntu-latest
    steps:
      #verifica o repositorio em $GITHUB_WORKSPACE, para o fluxo poder acessar
      - uses: actions/checkout@v1
      #JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Maven cache para permitir as e builds rodem com mais agilidade
      - name: Cache Maven packages
        #
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Builda a aplicacao com maven
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      #
      - name: Upload JAR
        #Isso carrega artefatos do fluxo de trabalho, permitindo que os dados sejam compartilhados entre jobs e armazene dados assim que um fluxo for concluido
        uses: actions/upload-artifact@v2
        with:
          #Define o nome do artefato
          name: artifact
          #e busca no path abaixo
          path: target/cicd_githubActions-0.0.1-SNAPSHOT.jar
 
